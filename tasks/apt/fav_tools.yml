- name: Install packages
  vars:
    sys_packages:
      [
        "jq",
        "yq",
        "httpie",
        "tig",
        "exa",
        "fd-find",
        "neofetch",
        "tmux",
        "bpytop",
        "duf",
        "rclone",
        "micro",
        "ripgrep",
        "silversearcher-ag",
        "tre-command",
      ]
  apt: name={{ sys_packages }} state=latest

# Install Hurl
- name: Set Hurl Version
  set_fact:
    hurl_version: "4.3.0"

- name: Download Hurl .deb file
  get_url:
    url: "https://github.com/Orange-OpenSource/hurl/releases/download/{{ hurl_version }}/hurl_{{ hurl_version }}_amd64.deb"
    dest: "/tmp/hurl_{{ hurl_version }}_amd64.deb"

- name: Update APT package index
  apt:
    update_cache: yes

- name: Install specific Hurl Version
  apt:
    deb: "/tmp/hurl_{{ hurl_version }}_amd64.deb"
    state: present

# Install fx
- name: Install fx
  shell: |
    curl https://fx.wtf/install.sh | sh
  args:
    executable: /bin/bash

# Install lnav
- name: Set lnav Version
  set_fact:
    lnav_version: "0.12.2"

- name: Download lnav .deb file
  get_url:
    url: "https://github.com/tstack/lnav/releases/download/v{{ lnav_version }}/lnav-{{ lnav_version }}-linux-musl-x86_64.zip"
    dest: "/tmp/lnav-{{ lnav_version }}-linux-musl-x86_64.zip"

- name: unzip lnav zip file
  shell: |
    unzip -o /tmp/lnav-{{ lnav_version }}-linux-musl-x86_64.zip -d /tmp/lnav-{{ lnav_version }}
  args:
    executable: /bin/bash

- name: Check if lnav binary exists
  stat:
    path: /tmp/nav-{{ lnav_version }}/lnav
  register: lnav

- name: add lnav to bin
  command: mv /tmp/nav-{{ lnav_version }}lnav /usr/bin
  when: lnav.stat.exists

# Install Doggo
- name: Set doggo Version
  set_fact:
    doggo_version: "0.3.7"

- name: Download Doggo .tar.gz file
  get_url:
    url: "https://github.com/mr-karan/doggo/releases/download/v{{ doggo_version }}/doggo_{{ doggo_version }}_linux_amd64.tar.gz"
    dest: "/tmp/doggo_{{ doggo_version }}_linux_amd64.tar.gz"

- name: unzip Doggo zip file
  shell: |
    tar -vzxf /tmp/doggo_{{ doggo_version }}_linux_amd64.tar.gz -C /tmp
  args:
    executable: /bin/bash

- name: Check if Doggo binary exists
  stat:
    path: /tmp/doggo
  register: doggo

- name: add doggo to bin
  command: mv /tmp/doggo /usr/bin
  when: doggo.stat.exists

# Install Lazygit
# Latest: LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*') \
- name: Set Lazygit Version
  set_fact:
    lazygit_version: "0.41.0"

- name: Download Lazygit .tar.gz file
  get_url:
    url: "https://github.com/jesseduffield/lazygit/releases/download//v{{ lazygit_version }}/lazygit_{{ lazygit_version }}_Linux_x86_64.tar.gz"
    dest: "/tmp/lazygit_{{ lazygit_version }}_Linux_x86_64.tar.gz"

- name: unzip Lazygit zip file
  shell: |
    tar -vzxf /tmp/lazygit_{{ lazygit_version }}_Linux_x86_64.tar.gz
  args:
    executable: /bin/bash

- name: Check if Lazygit binary exists
  stat:
    path: /tmp/lazygit
  register: lazygit

- name: add lazygit to bin
  command: mv /tmp/lazygit /usr/bin
  when: lazygit.stat.exists

# Install gping
- name: Add Azlux repository to sources list
  apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/azlux.gpg] https://packages.azlux.fr/debian/ bookworm main"
    state: present
    filename: azlux

- name: Ensure GPG and curl are installed
  apt:
    name:
      - gpg
      - curl
    state: present

- name: Download and install the Azlux GPG key
  command: curl -s https://azlux.fr/repo.gpg.key | gpg --dearmor -o /usr/share/keyrings/azlux.gpg
  args:
    creates: /usr/share/keyrings/azlux.gpg

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install gping
  apt:
    name: gping
    state: present

# Install Navi
- name: Download and install Navi
  shell: |
    bash <(curl -sL https://raw.githubusercontent.com/denisidoro/navi/master/scripts/install)
  args:
    executable: /bin/bash

# Install diff-so-fancy
- name: Clone the diff-so-fancy repository
  git:
    repo: https://github.com/so-fancy/diff-so-fancy.git
    dest: /tmp/diff-so-fancy
    version: master

- name: Make diff-so-fancy executable
  file:
    path: /tmp/diff-so-fancy/diff-so-fancy
    mode: "0755"
    state: file

- name: Move diff-so-fancy to /usr/bin
  command: mv /tmp/diff-so-fancy/diff-so-fancy /usr/bin/diff-so-fancy
  args:
    creates: /usr/bin/diff-so-fancy

- name: Clean up temporary directory
  file:
    path: /tmp/diff-so-fancy
    state: absent
    recurse: yes
